'*******************************************************************************
'** 	Created By Peter Horsbøll Møller, Precisely
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Icons.def"
Include "Menu.def"
'**default constants...
Include "Library\Defaults.def"

'-------------------------------------
Include "Library\ARRAYLib.def"
Include "Library\DEBUGLib.def"
Include "Library\FILELib.def"
Include "Library\ERRORLib.def"
Include "Library\LAYERLib.def"
Include "Library\TABLELib.def"
Include "Library\Types\T_LAYER_SETTINGS.def"
Include "Library\Types\T_LABEL_SETTINGS.def"

Include "DDConfigDlg.def"

Declare Sub DDCHandler_OnLoad
Declare Sub DDCHandler_OKClicked
Declare Sub DDCHandler_UpdateLayerClicked
Declare Sub DDCHandler_UpdateLayer(ByVal nItem As Integer)
Declare Sub DDCHandler_SelectBoundaryFile
Declare Sub DDCHandler_SelectOrigin2DestFile
Declare Sub DDCHandler_LayerClicked

Define	CTRL_CHK_SPLIT_WORK_HOME		100
Define	CTRL_LST_LAYERS			200
Define	CTRL_TXT_LAYERS			201
Define	CTRL_CMD_UPDATE_LAYER		210
Define	CTRL_TXT_BOUNDARY			300
Define	CTRL_CMD_SELECT_BOUNDARY		310
Define	CTRL_TXT_ORIG_2_DEST		400
Define	CTRL_CMD_SELECT_ORIG_2_DEST	410

Dim	mbSplitByWorkerHome As Logical,
	msBoundaryFile, msOrigin2DestinationFile As String,
	marrLayerNames(), marrOpenLayerNames() As String,
'	marrLayerTypes() As String,
	marrOpenLayerIDs(), arrOpenLayersIndex() As Integer,
	marrLayerUpdate() As Logical,
	marrLayerSettings() As T_LAYER_SETTINGS,
	marrLabelSettings() As T_LABEL_SETTINGS

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DDConfigDlg() As Logical

OnError GoTo ErrorOccured

DDConfigDlg = FALSE

	ReDim arrOpenLayersIndex(0)
	ReDim marrOpenLayerNames(0)
	ReDim marrOpenLayerIDs(0)
	ReDim marrLayerUpdate(0)

	Dialog
		Title "Configurarion"
		Calling DDCHandler_OnLoad

		'**************************************************************************************
		Control StaticText
			Position 5,5
			Title "Boundary MapInfo Tab File"
		Control EditText		ID CTRL_TXT_BOUNDARY
			Position 5,15		Width 200
			Value FILEGetRelativePath(ApplicationDirectory$(), DDCGetBoundaryFile())
		Control Button
			Position 205,15	Width 15	Height 13
			Title "..."
			Calling DDCHandler_SelectBoundaryFile

		'**************************************************************************************
		Control StaticText
			Position 5,30
			Title "Origin to Destination MapInfo Tab File"
		Control EditText		ID CTRL_TXT_ORIG_2_DEST
			Position 5,40		Width 200
			Value FILEGetRelativePath(ApplicationDirectory$(), DDCGetOrigin2DestFile())
		Control Button
			Position 205,40	Width 15	Height 13
			Title "..."
			Calling DDCHandler_SelectOrigin2DestFile

		'**************************************************************************************
		Control CheckBox		ID CTRL_CHK_SPLIT_WORK_HOME
			Position 5,60
			Title "Split result by Worker/Home"
			Value DDCSplitByWorkerHome()

		'**************************************************************************************
		Control StaticText		ID CTRL_TXT_LAYERS
			Position 5,75
			Title "Update Layer Settings"
		Control ListBox		ID CTRL_LST_LAYERS
			Position 5,85		Width 215	Height 70
			Calling DDCHandler_LayerClicked
		Control Button			ID CTRL_CMD_UPDATE_LAYER
			Position 5,155		Width 215
			Title "Read Styles from Layer"
			Calling DDCHandler_UpdateLayerClicked

		'**************************************************************************************
		Control OKButton
			Position 135,175	Width 40
			Calling DDCHandler_OKClicked
		Control CancelButton
			Position 180,175	Width 40

	If not CommandInfo(CMD_INFO_DLG_OK) Then
		Exit Function
	End If

	DDConfigDlg = TRUE

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDConfigDlg")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_OnLoad

Dim	nMID, nLayer, nFound, nCount As Integer,
	sLayerName As String

OnError GoTo ErrorOccured

'	Call DEBUGPrint(Ubound(marrLayerNames()) & " Layers defined: " & ARRAYToSeparatedTextString(marrLayerNames, ", "))

	nMID = FrontWindow()
	If nMID <> 0 Then
		For nLayer = 1 To MapperInfo(nMID, MAPPER_INFO_LAYERS)
			sLayerName	= LayerInfo(nMID, nLayer, LAYER_INFO_NAME)
'			Call DEBUGPrint("Looking for '" & sLayerName & "'")

			nFound = ARRAYFindValueString(marrLayerNames(), sLayerName)
			If nFound > 0 Then
				nCount = Ubound(marrOpenLayerNames) + 1

				ReDim arrOpenLayersIndex(nCount)
				arrOpenLayersIndex(nCount)	= nFound
				ReDim marrOpenLayerNames(nCount)
				marrOpenLayerNames(nCount)	= sLayerName '& "(" & marrLayerTypes(nFound) & ")"
				ReDim marrOpenLayerIDs(nCount)
				marrOpenLayerIDs(nCount)		= nLayer
				ReDim marrLayerUpdate(nCount)
				marrLayerUpdate(nCount)		= FALSE
			End If
		Next
	End If

	If Ubound(arrOpenLayersIndex) = 0 Then
		ReDim marrOpenLayerNames(1)
		marrOpenLayerNames(1) = "Run the Analyzer to change layer settings!"
		Alter Control CTRL_TXT_LAYERS			Disable
		Alter Control CTRL_LST_LAYERS			Disable
		Alter Control CTRL_CMD_UPDATE_LAYER	Disable
	Else
		Alter Control CTRL_TXT_LAYERS			Enable
		Alter Control CTRL_LST_LAYERS			Enable
		Alter Control CTRL_CMD_UPDATE_LAYER	Enable
	End If

	Alter Control CTRL_LST_LAYERS Title From Variable marrOpenLayerNames

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_OnLoad")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_OKClicked

Dim	nMID, nLayer As Integer,
	sFile As String

OnError GoTo ErrorOccured

	'**Boundary File
	sFile = ReadControlValue(CTRL_TXT_BOUNDARY)
	If sFile = "" Then
		Note "Please specify a dynamic demographic boundary table!"
		Alter Control CTRL_TXT_BOUNDARY Active
	End If
	sFile = FILEGetAbsolutePath(ApplicationDirectory$(), sFile)
	If Not FileExists(sFile) Then
		Note "Please specify an existing dynamic demographic boundary file!"
		Alter Control CTRL_TXT_BOUNDARY Active
	End If
	Call DDCSetBoundaryFile(sFile)

	'**Origin to Destination File
	sFile = ReadControlValue(CTRL_TXT_ORIG_2_DEST)
	If sFile = "" Then
		Note "Please specify a dynamic demographic origin to destination table!"
		Alter Control CTRL_TXT_ORIG_2_DEST Active
	End If
	sFile = FILEGetAbsolutePath(ApplicationDirectory$(), sFile)
	If Not FileExists(sFile) Then
		Note "Please specify an existing dynamic demographic origin to destination file!"
		Alter Control CTRL_TXT_ORIG_2_DEST Active
	End If
	Call DDCSetOrigin2DestFile(sFile)

	'**Split by Worker/Home
	Call DDCSetSplitByWorkerHome(ReadControlValue(CTRL_CHK_SPLIT_WORK_HOME))

	'**Read Layer Settings
	If Ubound(arrOpenLayersIndex) > 0 Then
		nMID	= FrontWindow()
		For nLayer = 1 To Ubound(marrOpenLayerNames)
			If marrLayerUpdate(nLayer) Then
'				Call DEBUGPrint("Refresh Layer '" & marrOpenLayerNames(nLayer) & "' using Layer ID '" & marrOpenLayerIDs(nLayer) & "'")
				Call tlsGetInfo(nMID, marrOpenLayerIDs(nLayer), marrLayerSettings(arrOpenLayersIndex(nLayer)))
				Call tlbsGetInfo(nMID, marrOpenLayerIDs(nLayer), marrLabelSettings(arrOpenLayersIndex(nLayer)))
			End If
		Next
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_OKClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_LayerClicked

Dim	nItem As Integer

OnError GoTo ErrorOccured

	nItem = ReadControlValue(CTRL_LST_LAYERS)
	If CommandInfo(CMD_INFO_DLG_DBL) Then
		Call DDCHandler_UpdateLayer(nItem)
	Else
		If nItem > 0 Then
			Alter Control CTRL_CMD_UPDATE_LAYER Enable
		Else
			Alter Control CTRL_CMD_UPDATE_LAYER Enable
		End If
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_LayerClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_UpdateLayerClicked

Dim	nItem As Integer

OnError GoTo ErrorOccured

	nItem = ReadControlValue(CTRL_LST_LAYERS)
	If nItem > 0 Then
		Call DDCHandler_UpdateLayer(nItem)
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_LayerClicked")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_UpdateLayer(ByVal nItem As Integer)

OnError GoTo ErrorOccured

	If nItem = 0 Then
		Exit Sub
	End If
	If NOT Left$(marrOpenLayerNames(nItem), 2) = "+ " Then
		marrOpenLayerNames(nItem)	= "+ " & marrOpenLayerNames(nItem)
		marrLayerUpdate(nItem)		= TRUE
'	Else
'		marrOpenLayerNames(nItem)	= Right$(marrOpenLayerNames(nItem), Len(marrOpenLayerNames(nItem)) - 2)
'		marrLayerUpdate(nItem)		= FALSE
	End If

	Alter Control CTRL_LST_LAYERS Title From Variable marrOpenLayerNames
	Alter Control CTRL_LST_LAYERS Value nItem

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_UpdateLayer")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_SelectBoundaryFile

Dim	sFile As String

OnError GoTo ErrorOccured

	sFile	= FILEGetAbsolutePath(ApplicationDirectory$(), ReadControlValue(CTRL_TXT_BOUNDARY))
	sFile	= FileOpenDlg(PathToDirectory$(sFile), PathToFileName$(sFile), "TAB", "Select Dynamic Demographic Boundary file...")
	If sFile = "" Then
		Exit Sub
	End If

	Alter Control CTRL_TXT_BOUNDARY	Value FILEGetRelativePath(ApplicationDirectory$(), sFile)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_SelectBoundaryFile")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DDCHandler_SelectOrigin2DestFile

Dim	sFile As String

OnError GoTo ErrorOccured

	sFile	= FILEGetAbsolutePath(ApplicationDirectory$(), ReadControlValue(CTRL_TXT_ORIG_2_DEST))
	sFile	= FileOpenDlg(PathToDirectory$(sFile), PathToFileName$(sFile), "TAB", "Select Dynamic Demographic Origin to Destination file...")
	If sFile = "" Then
		Exit Sub
	End If

	Alter Control CTRL_TXT_ORIG_2_DEST	Value FILEGetRelativePath(ApplicationDirectory$(), sFile)

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCHandler_SelectOrigin2DestFile")
	Call ERRShow()

End Sub

'**********************************************************************************************''
' Property
'**********************************************************************************************''
Sub DDCSetSplitByWorkerHome(ByVal bValue As Logical)

OnError GoTo ErrorOccured

	mbSplitByWorkerHome = bValue
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCSetSplitByWorkerHome")

End Sub
'**********************************************************************************************''
Function DDCSplitByWorkerHome() As Logical

OnError GoTo ErrorOccured

	DDCSplitByWorkerHome = mbSplitByWorkerHome
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCSplitByWorkerHome")

End Function

'**********************************************************************************************''
' Property
'**********************************************************************************************''
Sub DDCSetBoundaryFile(ByVal sFile As String)

OnError GoTo ErrorOccured

	msBoundaryFile = sFile
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCSetBoundaryFile")

End Sub
'**********************************************************************************************''
Function DDCGetBoundaryFile() As String

OnError GoTo ErrorOccured

	DDCGetBoundaryFile = msBoundaryFile
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCGetBoundaryFile")

End Function

'**********************************************************************************************''
' Property
'**********************************************************************************************''
Sub DDCSetOrigin2DestFile(ByVal sFile As String)

OnError GoTo ErrorOccured

	msOrigin2DestinationFile = sFile
	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "Set____")

End Sub
'**********************************************************************************************''
Function DDCGetOrigin2DestFile() As String

OnError GoTo ErrorOccured

	DDCGetOrigin2DestFile = msOrigin2DestinationFile
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DDCGetOrigin2DestFile")

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'
'**********************************************************************************************''
Sub DCCAddLayerSettings(	  ByVal sName As String
'					, ByVal sType As String
					, tLyr As T_LAYER_SETTINGS
					, tLbl AS T_LABEL_SETTINGS)

Dim	nCount As Integer

OnError GoTo ErrorOccured

	nCount = Ubound(marrLayerNames) + 1

	Redim marrLayerNames(nCount)
	marrLayerNames(nCount)	= sName
'	Redim marrLayerTypes(nCount)
'	marrLayerTypes(nCount)	= sType

	Redim marrLayerSettings(nCount)
	Call tlsCopy(tLyr, marrLayerSettings(nCount))
	Redim marrLabelSettings(nCount)
	Call tlbsCopy(tLbl, marrLabelSettings(nCount))

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DCCAddLayerSettings")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DCCGetLayerSettings(	  ByVal sName As String
'						, ByVal sType As String
						, tLyr As T_LAYER_SETTINGS
						, tLbl AS T_LABEL_SETTINGS
						) As Logical

Dim	nLayerIndex As Integer

OnError GoTo ErrorOccured

DCCGetLayerSettings = FALSE

	nLayerIndex	= ARRAYFindValueString(marrLayerNames(), sName)
	If nLayerIndex = 0 Then
		Exit Function
	End If

'	Call DEBUGPrint("DCCGetLayerSettings 1: " & sName & ": Brush Overrides: " & Ubound(marrLayerSettings(nLayerIndex).brsOverride) & " versus " & Ubound(tLyr.brsOverride))
	Call tlsCopy(marrLayerSettings(nLayerIndex), tLyr)
'	Call DEBUGPrint("DCCGetLayerSettings 2: " & sName & ": Brush Overrides: " & Ubound(marrLayerSettings(nLayerIndex).brsOverride) & " versus " & Ubound(tLyr.brsOverride))
	Call tlbsCopy(marrLabelSettings(nLayerIndex), tLbl)

	DCCGetLayerSettings = TRUE

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DCCGetLayerSettings")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Precisely
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function DCCApplyLayerSettings( ByVal nMID As Integer
						, ByVal sName As String
'						, ByVal sType As String
						) As Logical

Dim	nLayerID, nLayerIndex As Integer,
	sCmd As String

OnError GoTo ErrorOccured

DCCApplyLayerSettings = FALSE

	nLayerIndex	= ARRAYFindValueString(marrLayerNames(), sName)
	If nLayerIndex = 0 Then
		Exit Function
	End If

	nLayerID		= LAYERGetLayerNumber(nMID, sName)
	If nLayerID = 0 Then
		Exit Function
	End If

	sCmd	= tlsGetSetMapStatement(nMID, nLayerID, marrLayerSettings(nLayerIndex))
	If sCmd = "" Then
		Exit Function
	End If
	sCmd	= "Set Map Window " & nMID & " Layer " & nLayerID & " " & sCmd
'	Call DEBUGPrint(sCmd)
	Run Command sCmd

	sCmd	= tlbsGetSetMapStatement(nMID, nLayerID, marrLabelSettings(nLayerIndex))
	If sCmd = "" Then
		Exit Function
	End If
	sCmd	= "Set Map Window " & nMID & " Layer " & nLayerID & " " & sCmd
'	Call DEBUGPrint(sCmd)
	Run Command sCmd

DCCApplyLayerSettings = TRUE

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "DCCApplyLayerSettings")
	Call ERRShow()

End Function
